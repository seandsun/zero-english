---
interface NavItem {
  name: string;
  href: string;
}

// Misma ruta del "base" en astro.config.mjs
const siteBase = import.meta.env.BASE_URL;

const navItems: NavItem[] = [
  { name: 'Home', href: `${siteBase}` },
  { name: 'Temas', href: `${siteBase}english/` },
];

interface Props {
  isHorizontal?: boolean;
}

const { isHorizontal = false } = Astro.props as Props;

const currentPathname = Astro.url.pathname;
---

<ul
  class={`${isHorizontal ? 'hidden md:flex md:gap-8' : 'flex flex-col gap-5 w-full mt-[86px]'}`}
>
  {
    navItems.map((item: NavItem) => {
      const isActive =
        currentPathname === item.href ||
        (item.href !== siteBase && currentPathname.startsWith(item.href));

      return (
        <li>
          <a
            class={`text-md font-semibold pt-0.5 pb-1 px-2 rounded-sm shadow-sm no-underline md:text-base ${isActive ? 'bg-custom-blue-50 text-custom-blue-700' : 'bg-white text-gray-950'} hover:text-custom-blue-600 transition-all duration-300 ease-in-out`}
            href={item.href}
          >
            {item.name}
          </a>
        </li>
      );
    })
  }
</ul>
